<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flappy Bird Clone</title>
    <style>
        body {
            text-align: center;
            background-color: lightblue;
        }
        canvas {
            background-color: #fff;
            border: 2px solid black;
        }
    </style>
</head>
<body>
    <h1>Flappy Bird Clone</h1>
    <canvas id="gameCanvas" width="320" height="480"></canvas>

    <script>
        // Получаем элемент canvas
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");

        // Загрузка изображений
        const birdImg = new Image();
        const bgImg = new Image();
        const pipeTop = new Image();
        const pipeBottom = new Image();

        birdImg.src = "https://i.imgur.com/Qh5nZ4X.png";  // Птичка
        bgImg.src = "https://i.imgur.com/wbgqhqC.png";    // Фон
        pipeTop.src = "https://i.imgur.com/5zF9R68.png";  // Верхняя труба
        pipeBottom.src = "https://i.imgur.com/huFwX3h.png"; // Нижняя труба

        // Переменные
        let bird = { x: 50, y: 150, width: 34, height: 24, gravity: 1.5, lift: -25, velocity: 0 };
        let pipes = [];
        let score = 0;
        let gameOver = false;

        // Обработка прыжка
        document.addEventListener("keydown", function (event) {
            if (event.code === "Space") {
                bird.velocity = bird.lift;
            }
        });

        // Создание труб
        function createPipes() {
            let pipeX = canvas.width;
            let gap = 100;
            let pipeHeight = Math.floor(Math.random() * (canvas.height / 2)) + 50;
            pipes.push({ x: pipeX, y: pipeHeight, width: 52, height: pipeHeight });
        }

        // Обновление состояния игры
        function update() {
            if (gameOver) return;

            // Гравитация
            bird.velocity += bird.gravity;
            bird.y += bird.velocity;

            // Перемещение труб
            for (let i = 0; i < pipes.length; i++) {
                pipes[i].x -= 2;

                // Проверка столкновений
                if (
                    (bird.x < pipes[i].x + pipes[i].width &&
                    bird.x + bird.width > pipes[i].x &&
                    (bird.y < pipes[i].y || bird.y + bird.height > pipes[i].y + 100)) ||
                    bird.y + bird.height >= canvas.height
                ) {
                    gameOver = true;
                }

                // Подсчет очков
                if (pipes[i].x + pipes[i].width < bird.x && !pipes[i].scored) {
                    score++;
                    pipes[i].scored = true;
                }
            }

            // Удаление старых труб
            if (pipes.length > 0 && pipes[0].x < -pipes[0].width) {
                pipes.shift();
            }

            // Добавление новых труб
            if (pipes.length === 0 || pipes[pipes.length - 1].x < canvas.width - 150) {
                createPipes();
            }
        }

        // Отрисовка игры
        function draw() {
            ctx.drawImage(bgImg, 0, 0, canvas.width, canvas.height);
            ctx.drawImage(birdImg, bird.x, bird.y, bird.width, bird.height);

            for (let i = 0; i < pipes.length; i++) {
                ctx.drawImage(pipeTop, pipes[i].x, pipes[i].y - pipeTop.height, pipes[i].width, pipeTop.height);
                ctx.drawImage(pipeBottom, pipes[i].x, pipes[i].y + 100, pipes[i].width, pipeBottom.height);
            }

            ctx.fillStyle = "black";
            ctx.font = "20px Arial";
            ctx.fillText("Счет: " + score, 10, 20);

            if (gameOver) {
                ctx.fillText("Игра окончена! Перезагрузите страницу.", 50, canvas.height / 2);
            }
        }

        // Игровой цикл
        function gameLoop() {
            update();
            draw();
            requestAnimationFrame(gameLoop);
        }

        // Запуск игры
        gameLoop();
    </script>
</body>
</html>
